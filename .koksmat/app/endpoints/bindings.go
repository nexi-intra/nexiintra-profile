// -------------------------------------------------------------------
// Generated by 365admin-publish
// -------------------------------------------------------------------

package endpoints

import (
	"net/http"

	chi "github.com/go-chi/chi/v5"
	"github.com/swaggest/rest/nethttp"
	"github.com/swaggest/rest/web"
)

func AddEndpoints(s *web.Service, jwtAuth func(http.Handler) http.Handler) {
	s.Route("/v1", func(r chi.Router) {
		r.Group(func(r chi.Router) {
			//r.Use(adminAuth, nethttp.HTTPBasicSecurityMiddleware(s.OpenAPICollector, "User", "User access"))
			r.Use(jwtAuth, nethttp.HTTPBearerSecurityMiddleware(s.OpenAPICollector, "Bearer", "", ""))
			//	r.Use(rateLimitByAppId(50))
			//r.Method(http.MethodPost, "/", nethttp.NewHandler(ExchangeCreateRoomsPost()))
			r.Method(http.MethodPost, "/read/countries", nethttp.NewHandler(ReadCountriesPost()))
			r.Method(http.MethodPost, "/read/channels", nethttp.NewHandler(ReadChannelsPost()))
			r.Method(http.MethodPost, "/read/categories", nethttp.NewHandler(ReadCategoriesPost()))
			r.Method(http.MethodPost, "/read/units", nethttp.NewHandler(ReadUnitsPost()))
			r.Method(http.MethodPost, "/read/whilelisteddomains", nethttp.NewHandler(ReadWhilelisteddomainsPost()))
			r.Method(http.MethodPost, "/compile/lookupvalues", nethttp.NewHandler(CompileLookupvaluesPost()))
			r.Method(http.MethodPost, "/compile/wash", nethttp.NewHandler(CompileWashPost()))
			r.Method(http.MethodPost, "/publishchannels/uploadblob", nethttp.NewHandler(PublishchannelsUploadblobPost()))
			r.Method(http.MethodPost, "/publishchannels/sasurl", nethttp.NewHandler(PublishchannelsSasurlPost()))
			r.Method(http.MethodPost, "/publishdomains/uploadblob", nethttp.NewHandler(PublishdomainsUploadblobPost()))
			r.Method(http.MethodPost, "/publishdomains/geturl", nethttp.NewHandler(PublishdomainsGeturlPost()))
			r.Method(http.MethodPost, "/deployweb/create", nethttp.NewHandler(DeploywebCreatePost()))

		})
	})

}
